import React, {useRef, useState} from 'react'
import {Link} from 'react-router-dom'

import useFetch from 'hooks/useFetch'
import Attension from 'components/attension'

const Authentication = props => {
    const isLogin =props.match .path === '/login'
    const pageTitle = isLogin ? 'Sign In' : 'Sign Up'
    const descriptionPath = isLogin ? '/users/login': '/users'
    const descriptionLink = !isLogin ? '/login' : '/register'
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account'
    // const apiURL = isLogin ? `/users/login`: '/users'
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [username, setUsername] = useState('')
    // const emailRef = useRef(null)
    const [{response, isLoading, error}, doFetch] = useFetch(descriptionPath)

    console.log(props)
    

    const handleSubmit = event => {
     
        event.preventDefault()
        // console.log('data',email,password)
        const user = isLogin ? {email,password} : {email,password,username}
        // console.log('reffff',emailRef.current.value,password)
        doFetch({
            method: 'post',
        data: {
          user
        }
        })       
        // if (response) {
        
        //     alert(`Привет , мой дорогой друг, ${response.user.username}!!!`)
        // }
    
    }           
         
    return (
        <div className='auth-page'>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                        <h1 className='text-xs-center'>{pageTitle}</h1>
                        <div className='text-xs-center'>
                        <Link to={descriptionLink} className='nav-link'>
                        {descriptionText}
                        </Link>
                        </div>
                        {isLogin &&  <Attension response={response}/>}
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                              
                                { !isLogin &&
                                <fieldset className='form-group'>
                                    <input
                                        type='text'
                                        className='form-control form-control-lg'
                                        placeholder='Username'
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                        // ref={emailRef}
                                    />                                    
                                </fieldset>
                                }
                                <fieldset className='form-group'>
                                    <input
                                        type='email'
                                        className='form-control form-control-lg'
                                        placeholder='Email'
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                        // ref={emailRef}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        type='password'
                                        className='form-control form-control-lg'
                                        placeholder='Password'
                                        value={password}
                                        onChange={e => setPassword(e.target.value)}
                                    />
                                </fieldset>
                                <button
                                    className='btn btn-lg btn-primary pull-xs-right'
                                    type='submit'
                                    disabled={isLoading}
                                >
                                    {pageTitle}
                                </button>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Authentication