import React, { useContext, useEffect, useState } from 'react'
import { Redirect } from 'react-router-dom'

import useFetch from 'hooks/useFetch'
import { CurrentUserContext } from 'contexts/currentUser'
import BackendErrorMessage from 'components/backendErrorMessadge'
import useLocalStorage from 'hooks/useLocalStorage'


const Settings = () => {

    const [currentUserState, dispatch] = useContext(CurrentUserContext)
    const currentUser = currentUserState.currentUser
    const apiURL = '/user'
    const [{ response, error }, doFetch] = useFetch(apiURL)
    const [image, setImage] = useState('')
    const [username, setName] = useState('')
    const [bio, setBio] = useState('')
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [, setToken] = useLocalStorage('token')
    const [successfullLogout, setIsSuccessfullLogout] = useState(false)

    console.log('currentUserState', currentUserState)

    const handleSubmit = event => {
        event.preventDefault()
        doFetch({
            method: 'put',
            data: {
                ...currentUser,
                image,
                username,
                bio,
                email,
                password
            }
        })
    }
    const logout = event => {
        event.preventDefault()
        setToken('')
        dispatch({ type: 'SET_UNAUTHORIZED' })
        setIsSuccessfullLogout(true)
    }

    useEffect(() => {
        if (!currentUser) {
            return
        }



        setName(currentUser.username)
        setImage(currentUser.image)
        setBio(currentUser.bio)
        setEmail(currentUser.email)
    }, [currentUser])

    useEffect(() => {
        if (!response) {
            return
        }

        dispatch({ type: 'SET_AUTHORIZED', payload: response.user })
    }, [response, dispatch])

    if (successfullLogout) {
        return <Redirect to="/" />
    }

    return (
        <div className='settings-page'>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                        <h1 className='text-xs-center'>Your Settings</h1>
                        {error && <BackendErrorMessage backendErrors={error.errors} />}
                        <form onSubmit={handleSubmit}>
                            <fieldset>

                                <fieldset className='form-group'>

                                    <input
                                        type='text'
                                        className='form-control form-control-lg'
                                        placeholder='URL of profiles picture'
                                        value={image}
                                        onChange={e => setImage(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        type='text'
                                        className='form-control form-control-lg'
                                        placeholder='Username'
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <textarea
                                        type='text'
                                        className='form-control form-control-lg'
                                        placeholder='Short bio'
                                        value={bio}
                                        onChange={e => setBio(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        type='text'
                                        className='form-control form-control-lg'
                                        placeholder='Email'
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                    />
                                </fieldset>
                                <fieldset className='form-group'>
                                    <input
                                        type='current-password'
                                        className='form-control form-control-lg'
                                        placeholder='Password '
                                        value={password}
                                        onChange={e => setPassword(e.target.value)}
                                    />
                                </fieldset>
                                <button type='submit' className='btn btn-lg btn-primary pull-xs-right'>
                                    Update settings
                                </button>

                            </fieldset>
                        </form>
                        <hr />
                        <button className='btn btn-outline-danger' onClick={logout}>
                            Or click here to logout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    )
}

export default Settings