import React, {useEffect,useContext, useState, Fragment} from 'react'
import {Link, NavLink} from 'react-router-dom'
import Feed from "components/feed";
import useFetch from 'hooks/useFetch'

import {CurrentUserContext} from 'contexts/currentUser'
import Pagination from 'components/pagination'
import {limit, getPaginator} from 'utility/utuils'
import {stringify} from 'query-string'
import PopularTags from 'components/popularTags'

import FeedToggler from 'components/feedToggler'
const TagFeed = (props)=> {

const tagName = props.match.params.slug
console.log('tagName',tagName)
   
const {offset, currentPage} = getPaginator(props.location.search)
 const url = props.match.url
//  используя  'query-string'
//  const stringifyParams = stringify({     
//      limit,
//      offset
//  })
const [currentUserState] = useContext(CurrentUserContext)
const apiURL = `/articles?limit=${limit}&offset=${offset}&tag=${tagName}`

const [{response,isLoading,error}, doFetch] = useFetch(apiURL)
const {isLogged,articles} = currentUserState 

useEffect(() => {
    doFetch()
},[doFetch,currentPage,tagName])

console.log('props', props)
   return (
    <React.Fragment>       
            {isLogged &&
             <div className='home-page'>
                 <div className='banner'>
                     <div className='container'>
                         <h1>Medium clone</h1>
                         <p>A place to share knowladge</p>
                     </div>
                 </div>
                 <div className='container page'>
                     <div className='row'>
                         <div className='col-md-9'>
                             <FeedToggler tagName={tagName} />  
                            
                            {isLoading && <div>Loading...</div>}
                            {error && <div>Sometimes errors happend</div>}
                            {!isLoading && response && 
                            <Fragment>
                                                
                                <Feed articles={response.articles} />
                                <Pagination total={response.articlesCount}limit={limit} url={url} currentPage={currentPage} />
                                                
                            </Fragment>}
                                
                         </div>
                         <div className='col-md-3'>
                             <PopularTags/>
                         </div>
                     </div>
                 </div>
             </div>
                }

            {!isLogged && !isLoading &&
                <div className='container'>
                    <div className='col-md-6 modals'>
                    
                            <h2 >Вам необходимо зарегестрироваться!</h2>
                            
                    </div>
            </div>
            } 
        
         
 
         
    </React.Fragment>
       
)}
export default TagFeed