import React, {useEffect,useContext, useState, Fragment} from 'react'

import Feed from "components/feed";
import useFetch from 'hooks/useFetch'

import {CurrentUserContext} from 'contexts/currentUser'
import Pagination from 'components/pagination'
import {limit, getPaginator} from 'utility/utuils'
// import {stringify} from 'query-string'
import PopularTags from 'components/popularTags'

import FeedToggler from 'components/feedToggler'
const GlobalFeed = (props)=> {

   
const {offset, currentPage} = getPaginator(props.location.search)
 const url = props.match.url
//  используя  'query-string'
//  const stringifyParams = stringify({     
//      limit,
//      offset
//  })
const [currentUserState] = useContext(CurrentUserContext)
const apiURL = `/articles?limit=${limit}&offset=${offset}`

const [{response,isLoading,error}, doFetch] = useFetch(apiURL)
const {isLogged} = currentUserState // soburboris@ger.ru
console.log('currentUserState',currentUserState)
// console.log('stringifyParams',stringifyParams)
useEffect(() => {
    doFetch()
},[doFetch,currentPage])


   return (
    <React.Fragment>       
            {isLogged &&
             <div className='home-page'>
                 <div className='banner'>
                     <div className='container'>
                         <h1>Medium clone</h1>
                         <p>A place to share knowladge</p>
                     </div>
                 </div>
                 <div className='container page'>
                     <div className='row'>
                         <div className='col-md-9'>
                             <FeedToggler />  
                            
                            {isLoading && <div>Loading...</div>}
                            {error && <div>Sometimes errors happend</div>}
                            {!isLoading && response && 
                            <Fragment>
                                                
                                <Feed articles={response.articles} />
                                <Pagination total={response.articlesCount}limit={limit} url={url} currentPage={currentPage} />
                                                
                            </Fragment>}
                                
                         </div>
                         <div className='col-md-3'>
                             <PopularTags/>
                         </div>
                     </div>
                 </div>
             </div>
            }
             {!isLogged && !isLoading &&
                            <div className='container'>
                                <div className='col-md-10 offset-md-2 modals'>
                                
                                        <h2 >Вам необходимо авторизироваться!</h2>
                                        
                                </div>
                            </div>
                            } 

           
        
         
 
         
    </React.Fragment>
       
)}
export default GlobalFeed