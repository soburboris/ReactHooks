import { useState, useEffect, useCallback} from 'react'
import axios  from 'axios'

import useLocalStorage from "hooks/useLocalStorage"


export default url => {
    const baseURL = 'https://conduit.productionready.io/api'
    const [isLoading, setIsLoading] = useState(false)
    const [response, setResponse] = useState(null)
    const [error, setError] = useState(null)
    const [options , setOptions] = useState({})
    const [token] = useLocalStorage('token')

const doFetch = useCallback((options ={}) => {
    setOptions(options)
    setIsLoading(true)
},[])

useEffect(() => {
  const requestOptions ={
    ...options,
    ...{
      headers:{
        authorization: token ? `Token ${token}` : ''
      }
    }
  }
    if (!isLoading) {
        return
      }
  
    // console.log('useEffect was triggered')
   
    axios(baseURL + url, requestOptions)
      .then(res => {
        console.log('res', res)
        setIsLoading(false)
        setResponse(res.data)
        
        
      })
      .catch(error => {
        console.log('error', error)
        setIsLoading(false)
        setError(error.response.data)
      })
  1
},[isLoading,options,url])
  return [{isLoading, response, error,token}, doFetch]
  
}

